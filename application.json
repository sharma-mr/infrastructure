{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "CSYE 6225 Spring 2020 Create Network Infrastructure",
    "Parameters": {
        "VPCName": {
            "Type": "String",
            "Description": "Name of VPC"
        },
        "myVPCCIDR": {
            "Type": "String",
            "Description": "VPC CIDR"
        },
        "mySubnet1CIDR": {
            "Type": "String",
            "Description": "Subnet 1 CIDR"
        },
        "mySubnet2CIDR": {
            "Type": "String",
            "Description": "Subnet 2 CIDR"
        },
        "mySubnet3CIDR": {
            "Type": "String",
            "Description": "Subnet 3 CIDR"
        },
        "SubnetName1": {
            "Type": "String",
            "Default": "subnet1",
            "Description": "Subnet 1 Name"
        },
        "SubnetName2": {
            "Type": "String",
            "Default": "subnet2",
            "Description": "Subnet 2 Name"
        },
        "SubnetName3": {
            "Type": "String",
            "Default": "subnet3",
            "Description": "Subnet 3 Name"
        },
        "InternetGateway": {
            "Type": "String",
            "Default": "internetgateway",
            "Description": "Internet Gateway Name."
        },
        "RouteTable": {
            "Type": "String",
            "Default": "routeTable",
            "Description": "Internet Gateway Name."
        }
    },
    "AMI": {
      "Description": "AMI for EC2 instance",
      "Type": "String"
    },
    "keyname": {
      "Description": "Name of key for the EC2 instance",
      "Type": "String"
    },
    "ec2InstanceType": {
      "Description": "The instance type for EC2",
      "Type": "String",
      "Default" : "t2.micro"
    },
    "myEC2Name":{
      "Description": "Name of EC2",
      "Type": "String",
      "Default" : "myEC2Server"
    },
    "dbSecurityGroup":{
      "Description": "Name of database security group",
      "Type": "String",
      "Default" : "csye6225-database-securitygroup"
    },
    "appSecurityGroup":{
      "Description": "Name of application security group",
      "Type": "String",
      "Default" : "csye6225-application-securitygroup"
    },
    "dbName":{
      "Description": "RDS Database Name",
      "Type": "String",
      "Default" : "csye6225"
    },
    "dbUserName":{
      "Description": "RDS DB User Name",
      "Type": "String",
      "Default" : "dbuser"
    },
    "dbuserPassword":{
      "Description": "RDS DB UserPassword",
      "Type": "String",
      "Default" : "dbuserPassword"
    },
    "dbIdentifier":{
      "Description": "RDS Name Identifier",
      "Type": "String",
      "Default" : "csye6225-spring2020"
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "myVPCCIDR"
                },
                "EnableDnsSupport": "true",
                "EnableDnsHostnames": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "VPCName"
                        }
                    }
                ]
            }
        },
        "mySubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "0",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref": "mySubnet1CIDR"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "SubnetName1"
                        }
                    }
                ]
            }
        },
        "mySubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "1",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref": "mySubnet2CIDR"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "SubnetName2"
                        }
                    }
                ]
            }
        },
        "mySubnet3": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "AvailabilityZone": {
                    "Fn::Select": [
                        "2",
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Ref": "mySubnet3CIDR"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "SubnetName3"
                        }
                    }
                ]
            }
        },
        "myInternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "InternetGateway"
                        }
                    }
                ]
            }
        },
        "myAttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "myInternetGateway"
                }
            }
        },
        "myRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "RouteTable"
                        }
                    }
                ]
            }
        },
        "myRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "myAttachGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "myRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "myInternetGateway"
                }
            }
        },
        "mySubnetRouteTableAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "mySubnet1"
                },
                "RouteTableId": {
                    "Ref": "myRouteTable"
                }
            }
        },
        "mySubnetRouteTableAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "mySubnet2"
                },
                "RouteTableId": {
                    "Ref": "myRouteTable"
                }
            }
        },
        "mySubnetRouteTableAssociation3": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "mySubnet3"
                },
                "RouteTableId": {
                    "Ref": "myRouteTable"
                }
            }
        },
        "applicationSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
          "Properties": {
            "GroupDescription": "Security group for EC2 server",
            "GroupName": "csye6225-securitygroup",
            "SecurityGroupIngress": [
              {
                "IpProtocol": "tcp",
                "FromPort": "22",
                "ToPort": "22",
                "CidrIp": "0.0.0.0/0"
              },
              {
                "IpProtocol": "tcp",
                "FromPort": "80",
                "ToPort": "80",
                "CidrIp": "0.0.0.0/0"
              },
              {
                "IpProtocol": "tcp",
                "FromPort": "443",
                "ToPort": "443",
                "CidrIp": "0.0.0.0/0"
              },
              {
               "FromPort": "8080",
               "IpProtocol": "tcp",
               "ToPort": "8080",
               "CidrIp": "0.0.0.0/0"
              }
            ],
            "Tags": [
              {
                "Key": "Name",
                "Value": {"Ref":"appSecurityGroup"}
              }
            ],
            "VpcId": {
              "Ref": "myVPC"
            }
          }
        },
        "databaseSecurityGroup": {
          "Type" : "AWS::EC2::SecurityGroup",
          "Properties" : {
            "GroupDescription" : "SecurityGroup for RDS",
            "GroupName" : "csye6225-database-securitygroup",
            "SecurityGroupIngress": [
              {
                "IpProtocol": "tcp",
                "FromPort": "3306",
                "ToPort": "3306",
                "SourceSecurityGroupId": {
                  "Ref": "applicationSecurityGroup"
                }
              }
            ],
            "Tags": [
              {
                "Key": "Name",
                "Value": {"Ref": "dbSecurityGroup"}
              }
            ],
            "VpcId": {
              "Ref": "myVPC"
            }
          }
        },
        "myS3Bucket": {
        "Type" : "AWS::S3::Bucket",
        "Properties" : {
        "AccessControl" : "Private",
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
              "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "LifecycleConfiguration" : {
          "Rules": [
            {
              "Id": "ShiftIn30Days",
              "Status": "Enabled",
              "Transition": {
                "TransitionInDays": "30",
                "StorageClass" : "STANDARD_IA"
              }
            }
          ]
        }
      }
    }
    }
}